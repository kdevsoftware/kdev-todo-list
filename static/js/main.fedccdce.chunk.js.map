{"version":3,"sources":["asset/image/logo.png","layout/header/index.js","config/firebase.js","config/constant.js","store/action/index.js","store/constant/index.js","components/todo-list-item/index.js","components/todo-list/index.js","layout/main/index.js","layout/footer/index.js","layout/index.js","store/reducer/data/index.js","store/reducer/index.js","store/index.js","serviceWorker.js","index.js"],"names":["module","exports","AppHeader","className","href","src","Logo","height","alt","format","ticking","interval","Component","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","databaseRef","ref","todosRefAtHome","child","todosRefAtOffice","addToDo","place","newToDo","dispatch","a","push","set","completeToDo","completeToDoId","remove","fetchToDos","on","snapshot","type","payload","todos","val","TodoListItem","completeClick","completeTodoId","props","this","todoId","todo","key","title","onClick","connect","TodoList","state","showForm","formValue","renderForm","onSubmit","formSubmit","style","top","right","width","placeholder","value","onChange","inputChange","event","setState","target","preventDefault","minWidth","renderToDo","data","todoRef","toDos","_","map","isEmpty","actions","tabsContent","content","AppMain","transform","showInkBar","items","tab","index","getContent","AppFooter","Date","getFullYear","App","combineReducers","action","store","createStore","reducer","applyMiddleware","reduxThunk","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fedccdce.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.67c1a1e2.png\";","import React, { Component } from 'react';\nimport Clock from 'react-live-clock';\n\nimport Logo from '../../asset/image/logo.png';\n\nclass AppHeader extends Component {\n  render() {\n    return (\n      <nav className=\"navbar navbar-dark bg-primary pl-4 pr-5\">\n        <a className=\"navbar-brand d-flex align-items-center py-3\" href=\"/\">\n          <img src={Logo} height=\"48\" alt=\"\" />\n          <h3 className=\"d-inline mb-0 ml-3\">Todo List</h3>\n        </a>\n\n        <Clock\n          className=\"text-white\"\n          format={'h:mm:ss A ( MMM Mo, ddd )'}\n          ticking={true}\n          interval={1000}\n        />\n      </nav>\n    );\n  }\n}\n\nexport default AppHeader;\n","import * as firebase from 'firebase';\n\nimport { firebaseConfig } from './constant';\n\nfirebase.initializeApp(firebaseConfig);\n\nconst databaseRef = firebase.database().ref();\n\nexport const todosRefAtHome = databaseRef.child('todos-at-home');\nexport const todosRefAtOffice = databaseRef.child('todos-at-office');\n","export const firebaseConfig = {\n  apiKey: 'AIzaSyDsJG5_l4Q2oACLcYG8TFRVs4hOKfdKkFA',\n  authDomain: 'kdevsoftware-todo-list-demo.firebaseapp.com',\n  databaseURL: 'https://kdevsoftware-todo-list-demo.firebaseio.com',\n  projectId: 'kdevsoftware-todo-list-demo',\n  storageBucket: 'kdevsoftware-todo-list-demo.appspot.com',\n  messagingSenderId: '833096856945',\n  appId: '1:833096856945:web:54ef0d5fa5739d3d0cb2d0',\n  measurementId: 'G-CCB2LPWXZG'\n};\n","import { todosRefAtHome, todosRefAtOffice } from '../../config/firebase';\nimport { HOME, FETCH_TODOS } from '../constant';\n\nexport const addToDo = (place, newToDo) => async dispatch => {\n  const todosRef = place === HOME ? todosRefAtHome : todosRefAtOffice;\n  todosRef.push().set(newToDo);\n};\n\nexport const completeToDo = (place, completeToDoId) => async dispatch => {\n  const todosRef = place === HOME ? todosRefAtHome : todosRefAtOffice;\n  todosRef.child(completeToDoId).remove();\n};\n\nexport const fetchToDos = place => async dispatch => {\n  const todosRef = place === HOME ? todosRefAtHome : todosRefAtOffice;\n\n  todosRef.on('value', snapshot => {\n    dispatch({\n      type: FETCH_TODOS,\n      payload: { place, todos: snapshot.val() }\n    });\n  });\n};\n","export const FETCH_TODOS = 'FETCH_TODOS';\nexport const HOME = 'home';\nexport const OFFICE = 'office';\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { completeToDo } from '../../store/action';\n\nclass TodoListItem extends Component {\n  render() {\n    const { todoId, todo } = this.props;\n\n    return (\n      <div className=\"shadow-sm card mb-3\" key=\"toDoName\">\n        <div className=\"card-body\">\n          <p className=\"card-text\">{todo.title}</p>\n        </div>\n\n        <div className=\"card-footer text-right\">\n          <button\n            type=\"button\"\n            className=\"btn btn-outline-success\"\n            onClick={() => this.completeClick(todoId)}\n          >\n            Done\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  completeClick = completeTodoId => {\n    const { completeToDo, place } = this.props;\n    completeToDo(place, completeTodoId);\n  };\n}\n\nexport default connect(\n  null,\n  { completeToDo }\n)(TodoListItem);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\n\nimport TodoListItem from '../todo-list-item';\nimport * as actions from '../../store/action';\n\nclass TodoList extends Component {\n  state = {\n    showForm: false,\n    formValue: ''\n  };\n\n  componentWillMount() {\n    const { place } = this.props;\n    this.props.fetchToDos(place);\n  }\n\n  render() {\n    const { showForm } = this.state;\n\n    return (\n      <div className=\"position-relative mt-4\">\n        <button\n          className=\"btn btn-outline-primary mb-5\"\n          style={{minWidth: '100px'}}\n          onClick={() => this.setState({ showForm: !showForm })}\n        >\n          {showForm ? <i>Close</i> : <i>Add Item</i>}\n        </button>\n\n        {this.renderForm()}\n        {this.renderToDo()}\n      </div>\n    );\n  }\n\n  renderForm = () => {\n    const { showForm, formValue } = this.state;\n\n    if (showForm) {\n      return (\n        <div>\n          <form onSubmit={this.formSubmit}>\n            <div className=\"position-absolute d-flex\" style={{top: 0, right: 0, width: 'calc(100% - 120px)'}}>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                placeholder=\"What should I do?\"\n                value={formValue}\n                onChange={this.inputChange}\n              />\n            </div>\n          </form>\n        </div>\n      );\n    }\n  };\n\n  renderToDo() {\n    const { data, place } = this.props;\n\n    let todoRef = data[place];\n\n    const toDos = _.map(todoRef, (value, key) => {\n      return <TodoListItem key={key} place={place} todoId={key} todo={value} />;\n    });\n\n    if (!_.isEmpty(toDos)) {\n      return toDos;\n    }\n\n    return (\n      <div>\n        <h3 className=\"text-center\">No more things to do ...</h3>\n      </div>\n    );\n  }\n\n  inputChange = event => {\n    this.setState({ formValue: event.target.value });\n  };\n\n  formSubmit = event => {\n    const { formValue } = this.state;\n    const { place, addToDo } = this.props;\n\n    event.preventDefault();\n\n    addToDo(place, { title: formValue });\n\n    this.setState({ formValue: '' });\n  };\n}\n\nconst mapStateToProps = ({ data }) => {\n  return {\n    data\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  actions\n)(TodoList);\n","import React, { Component } from 'react';\nimport Tabs from 'react-responsive-tabs';\nimport 'react-responsive-tabs/styles.css';\nimport './index.scss';\n\nimport TodoList from '../../components/todo-list';\nimport { HOME, OFFICE } from '../../store/constant';\n\nconst tabsContent = [\n  {\n    title: 'HOME',\n    content: <TodoList place={HOME} />\n  },\n  {\n    title: 'OFFICE',\n    content: <TodoList place={OFFICE} />\n  }\n];\n\nfunction getTabs() {\n  return tabsContent.map((tab, index) => ({\n    title: tab.title,\n    getContent: () => tab.content,\n    key: index\n  }));\n}\n\nclass AppMain extends Component {\n  render() {\n    return (\n      <div className=\"container my-4 pb-5 main-section\">\n        <Tabs transform={false} showInkBar={true} items={getTabs()} />\n      </div>\n    );\n  }\n}\n\nexport default AppMain;\n","import React, { Component } from 'react';\n\nimport './index.scss';\n\nclass AppFooter extends Component {\n  render() {\n    return (\n      <div className=\"app-footer bg-light fixed-bottom py-3 text-center\">\n        {/* Copyright &copy; {new Date().getFullYear()} All rights reserved | built\n        by kdevsoftware */}\n        {new Date().getFullYear()} - kdevsoftware\n      </div>\n    );\n  }\n}\n\nexport default AppFooter;\n","import React, { Component, Fragment } from 'react';\n\nimport AppHeader from './header';\nimport AppMain from './main';\nimport AppFooter from './footer';\n\nclass App extends Component {\n  render() {\n    return (\n      <Fragment>\n        <AppHeader />\n        <AppMain />\n        <AppFooter />\n      </Fragment>\n    );\n  }\n}\n\nexport default App;\n","import { FETCH_TODOS } from '../../constant';\n\nexport default (state = {}, action) => {\n  switch (action.type) {\n    case FETCH_TODOS:\n      state[action.payload.place] = action.payload.todos;\n      return { ...state };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport data from './data';\n\nexport default combineReducers({\n  data\n});\n","import { applyMiddleware, createStore } from 'redux';\nimport reduxThunk from 'redux-thunk';\n\nimport reducer from './reducer';\n\nexport const store = createStore(reducer, {}, applyMiddleware(reduxThunk));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport './index.scss';\nimport App from './layout';\nimport { store } from './store';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}